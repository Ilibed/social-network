var webApp = angular.module('socialNetworkApp', ["ngRoute"]);
webApp.config(function ($routeProvider) {
    $routeProvider.when('/',
        {
            templateUrl: 'views/components/home/home.html',
            controller: 'homeController'
        });
    $routeProvider.when('/login',
        {
            templateUrl: 'views/components/login/login.html',
            controller: 'loginController'
        });

    $routeProvider.otherwise({redirectTo: '/'});
}).run(function($rootScope, $location) {
    $rootScope.loggedInUser = false;

    $rootScope.$on("$routeChangeStart", function(event, next, current) {
        if ($rootScope.loggedInUser === false) {
            if (!((next.templateUrl == "components/registry/view.html")
                || (next.templateUrl == "views/components/login/login.html"))) {
                $location.path("/");
            }
        }
        else {
            if (next.templateUrl == "views/components/login/login.html") {
                $location.path("/");
            }
        }
    });
});
webApp.controller("homeController", ['$scope', function($scope){

}]);
webApp.controller("loginController", ['$scope', '$location', 'loginService', function($scope, $location, loginService){
    $scope.doLogin = function () {
        var promiseObj = loginService.doLogin($scope.username, $scope.password);
        promiseObj.then(function(value) {
            if (value.id == -1){
                $scope.username = "";
                $scope.password = "";
            }
            else {
                $rootScope.userInfo = value;
                $rootScope.loggedInUser = true;
                $location.path('/');
            }
        });
    };
}]);
webApp.factory('loginService',['$http', '$q', function ($http, $q) {
    return{
        doLogin: function (username, password) {
            var deferred = $q.defer();
            $http({
                method: 'POST',
                url: '/controller?command=LOGIN',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
                },
                data: 'username=' + username + '&password=' + password
            }).
            then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.status);
                });

            return deferred.promise;
        }
    }
}]);


webApp.directive('switchTemplate', function() {
    return {
        restrict: 'C',
        replace: true,
        templateUrl: function (elem, attrs) {
            if (attrs.mode) {
                return 'views/shared/template/logged.html';
            } else {
                return 'views/shared/template/unlogged.html';
            }
        },
        scope: {
            mode: "="
        }
    };
});