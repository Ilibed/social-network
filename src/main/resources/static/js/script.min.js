var webApp = angular.module('socialNetworkApp', ["ngRoute", "ngAudio", "ngCookies", "pascalprecht.translate", "ngFileUpload"]);
webApp.config(function ($routeProvider, $translateProvider) {
    $routeProvider.when('/',
        {
            templateUrl: 'views/components/home/home.html',
            controller: 'homeController'
        });
    $routeProvider.when('/login',
        {
            templateUrl: 'views/components/login/login.html',
            controller: 'loginController'
        });
    $routeProvider.when('/registry',
        {
            templateUrl: 'views/components/registry/registry.html',
            controller: 'registryController'
        });
    $routeProvider.when('/music',
        {
            templateUrl: 'views/components/music/music.html',
            controller: 'musicController'
        }
    );

    $routeProvider.otherwise({redirectTo: '/login'});

    $translateProvider.useCookieStorage();
    $translateProvider.useStaticFilesLoader({
        prefix: 'assets/i18n/',
        suffix: '.json'
    });
    $translateProvider.preferredLanguage('en');
}).run(function($rootScope, $location) {
    $rootScope.loggedInUser = false;

    $rootScope.$on("$routeChangeStart", function(event, next, current) {
        if ($rootScope.loggedInUser === false) {
            if (!((next.templateUrl == "views/components/registry/registry.html")
                || (next.templateUrl == "views/components/login/login.html")
                || (next.templateUrl == "views/components/music/music.html"))) {
                $location.path("/login");
            }
        }
        else {
            if (next.templateUrl == "views/components/login/login.html") {
                $location.path("/");
            }
        }
    });
});
webApp.controller("homeController", ['$scope', function($scope){

}]);
webApp.controller("loginController", ['$scope', '$location', '$rootScope', 'loginService', function($scope, $location, $rootScope, loginService){
    $scope.loginUser = function () {
        var promiseObj = loginService.doLogin($scope.username, $scope.password);
        promiseObj.then(function(value) {
            var userPromiseObj = loginService.getUser();
            userPromiseObj.then(function (value) {
                $rootScope.userInfo = value;
                $rootScope.loggedInUser = true;
                $location.path('/');
            },
            function (value) {
                //something wrong server problem
            });
        },
        function (value) {
            $scope.username = "";
            $scope.password = "";
        });
    };
}]);
webApp.factory('loginService',['$http', '$q', function ($http, $q) {
    return{
        doLogin: function (username, password) {
            var deferred = $q.defer();
            $http({
                method: 'POST',
                url: '/login',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
                },
                data: 'username=' + username + '&password=' + password
            }).
            then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.status);
                });

            return deferred.promise;
        },
        getUser: function () {
            var deferred = $q.defer();
            $http({
                method: 'POST',
                url: '/api/auth',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'
                }
            }).
            then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.status);
                });

            return deferred.promise;
        }
    }
}]);


webApp.controller("musicController",['$scope', function ($scope) {

}]);


/**
 * Created by gs on 29.04.2017.
 */
webApp.factory('musicLoadService',['$q', '$http', 'Upload', function ($q, $http, Upload) {
    return{
        uploadFile: function (file, fileName) {
            var deferred = $q.defer();
            Upload.upload({
                url: '/api/upload/music',
                fields: {'fileName': fileName},
                file: file
            }).then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.status);
                }
            );

            return deferred.promise;
        },
        getSounds: function () {
            var deferred = $q.defer();
            $http({method: 'GET', url: '/api/get/sounds', params: {noCache: (new Date().getTime()) + Math.random()}}).
            then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.status);
                });

            return deferred.promise;
        }
    }
}]);
/**
 * Created by gs on 29.04.2017.
 */
webApp.directive('musicPlayer', function($rootScope, ngAudio, musicLoadService) {
    return {
        restrict: 'AEC',
        replace: true,
        templateUrl: 'views/components/music/playerTemplate.html',
        link: function(scope, elem, attrs) {
            if ($rootScope.sounds == null){
                var promiseObj = musicLoadService.getSounds();
                promiseObj.then(function(value) {
                        $rootScope.sounds = value;
                        $rootScope.currentMusic = $rootScope.sounds[0];
                        $rootScope.currentMusicIndex = 0;

                        for (var i = 0; i < $rootScope.sounds.length; i++){
                            $rootScope.sounds[i].playing = false;
                            $rootScope.sounds[i].loaded = false;
                            $rootScope.sounds[i].sound = {};
                        }
                    },
                    function (value) {

                    }
                );
            }

            scope.file = {};

            var endedCallback = function () {
                scope.playNext();
            };

            scope.playSound = function (music, index) {
                if (music.loaded == false){
                    music.sound = ngAudio.load(music.path);
                    music.sound.setEndedCallback(endedCallback);
                    music.loaded = true;
                }

                if ($rootScope.currentMusic != music){
                    $rootScope.currentMusicIndex = index;
                    if ($rootScope.currentMusic.loaded){
                        $rootScope.currentMusic.sound.stop();
                        $rootScope.currentMusic.playing = false;
                    }

                    $rootScope.currentMusic = music;
                }

                if (!music.playing){
                    music.sound.play();
                }
                else {
                    music.sound.pause();
                }

                music.playing = !music.playing;
            };

            scope.muteVolume = function (music) {
                music.sound.muting = !music.sound.muting;
            };

            scope.changeVolume = function (music) {
                if (music.sound.muting){
                    music.sound.muting = false;
                }
            };

            scope.playNext = function () {
                scope.playSound($rootScope.sounds[($rootScope.currentMusicIndex + 1) % $rootScope.sounds.length], ($rootScope.currentMusicIndex + 1) % $rootScope.sounds.length) ;
            };

            scope.playPrev = function () {
                if ($rootScope.currentMusicIndex > 0){
                    scope.playSound($rootScope.sounds[($rootScope.currentMusicIndex - 1) % $rootScope.sounds.length], ($rootScope.currentMusicIndex - 1) % $rootScope.sounds.length) ;
                }
            };

            scope.repeatMusic = function (music) {
                if (music.sound.loop === true){
                    music.sound.loop = 0;
                }
                else {
                    music.sound.loop = true;
                }
            };

            scope.setNewFile = function (newFile) {
                scope.file = newFile;
            };

            scope.uploadMusic = function () {
                var promiseObj = musicLoadService.uploadFile(scope.file, scope.fileName);
                promiseObj.then(function(value) {
                        var newSound = value;
                        newSound.playing = false;
                        newSound.loaded = false;
                        newSound.sound = {};
                        $rootScope.sounds.push(newSound);
                    },
                    function (value) {

                    }
                );
            }
        }
    };
});
/**
 * Created by gs on 06.05.2017.
 */
webApp.directive('shortMusicPlayer', function($rootScope, ngAudio) {
    return {
        restrict: 'AEC',
        replace: true,
        templateUrl: 'views/components/music/shortPlayerTemplate.html',
        link: function(scope, elem, attrs) {
            var endedCallback = function () {
                scope.playNext();
            };

            scope.playSound = function (music, index) {
                if (music.loaded == false){
                    music.sound = ngAudio.load(music.path);
                    music.sound.setEndedCallback(endedCallback);
                    music.loaded = true;
                }

                if ($rootScope.currentMusic != music){
                    $rootScope.currentMusicIndex = index;
                    if ($rootScope.currentMusic.loaded){
                        $rootScope.currentMusic.sound.stop();
                        $rootScope.currentMusic.playing = false;
                    }

                    $rootScope.currentMusic = music;
                }

                if (!music.playing){
                    music.sound.play();
                }
                else {
                    music.sound.pause();
                }

                music.playing = !music.playing;
            };

            scope.playNext = function () {
                scope.playSound($rootScope.sounds[($rootScope.currentMusicIndex + 1) % $rootScope.sounds.length], ($rootScope.currentMusicIndex + 1) % $rootScope.sounds.length) ;
            };

            scope.playPrev = function () {
                if ($rootScope.currentMusicIndex > 0){
                    scope.playSound($rootScope.sounds[($rootScope.currentMusicIndex - 1) % $rootScope.sounds.length], ($rootScope.currentMusicIndex - 1) % $rootScope.sounds.length) ;
                }
            };
        }
    };
});
webApp.controller('registryController', ['$scope', '$rootScope', '$location', 'registerService', control]);

function control($scope, $rootScope, $location, registerService) {
    $scope.register = function () {
        var user = registerService.createRegisterInf($scope);
        var promiseObj=registerService.doRegister(user);
        promiseObj.then(function(value) {
                $rootScope.loggedInUser = true;
                $rootScope.userInfo = value;
                $location.path("/");
            },
            function (value) {
                registerService.performScope($scope, value);
        });
    };
}
webApp.factory('registerService',['$http', '$q', '$filter', register]);

function register($http, $q, $filter) {
    return{
        doRegister: function (regInf) {
            var deferred = $q.defer();
            $http({
                method: 'POST',
                url: '/api/user',
                headers: {
                    'Content-Type': 'application/json'
                },
                data: regInf
            }).
            then(function(response) {
                    deferred.resolve(response.data);
                },
                function(response) {
                    deferred.reject(response.data);
                });

            return deferred.promise;
        },
        createRegisterInf: function ($scope) {
            var regInf = {};
            regInf.password = $scope.password;
            regInf.firstName = $scope.name;
            regInf.lastName = $scope.surname;
            regInf.email = $scope.email;
            regInf.country = $scope.country;
            regInf.city = $scope.city;
            regInf.birthday = $filter('date')($scope.birthday, "yyyy-MM-dd");

            return regInf;
        },
        performScope: function ($scope, value) {
            $scope.password = "";
            $scope.repeatPassword = "";
            $scope.name = value.firstName;
            $scope.surname = value.lastName;
            $scope.email = value.email;
            $scope.country = value.country;
            $scope.city = value.city;
        }
    }
}
webApp.directive('langSelector', function($translate) {
    return {
        restrict: 'C',
        replace: true,
        templateUrl: 'views/shared/lang/lang-selector.html',
        link: function(scope, elem, attrs) {
            scope.setLocale = function(locale) {
                $translate.use(locale);
            };
        }
    };
});